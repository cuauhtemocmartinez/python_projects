###########################################################################
# Program Header
# Course: CIS 117 Python Programming
# Name: Cuauhtemoc Alex Martinez
# Description: Lab 4
# Application: Shopping Budget – The Pricelist
# Topics: Programming with Text Data, Files and Exceptions
# Development Environment: Windows 10
# Version: Python 3.7.4
# Solution File: CMartinezLab4
# Date: 02/17/20
###########################################################################
##Deliverables (2 files expected):
##
##yournameLab4.py  Your source code solution and a copy of the program run
##i.e. the console output). Be sure to comment out your run (i.e. console
##output display) so that your .py file will still run in the grader test bed.   
##yournameLab4out.txt Your output file (i.e. this is the file generated by
##                                      your program run).
##Input Error Checking:  Use a try-except construct to catch an invalid input
##file. 
##
##Here are some other tips and requirements:
##
##Use the input file lab4.txt provided for one of your 2 required test runs.
##Name the output file yournameLab4out.txt (i.e. Ann San Mateo’s output file
##                                          would be sanMateoLab4out.txt).
##Submit 2 files: the output file text and your Python source file.  Be sure
##that your source file includes a commented copy of the script run output to
##the console.
##Make sure to skip input lines that do not contain a colon.
##Format output file as per the specification.
##Provide a try-except construct.
##Use a for loop to run a minimum of 2 test cases:  test case 1:  demonstrates
##try-except; test case 2: successful test run. 


#Program Source Statements

def get_input():  #Read input from user
    file_name = input("Please type the name of the text file that contains "\
                      "your itemized shopping list: ") # file_name
    print("Name of file: " + file_name)

get_input()


def main():  # main fuction definition 
    file_in = open("Lab4.txt", 'r')
    contents = file_in.readlines()
    for line in contents:
        print(line, end='')

    file_in.close() 

# Prompt for the input and output file names.  - writing to console
# Open the input and output files. - can write to files using fname.write() or to console using print

    file_out = open("test_out.txt", 'w')
      
    for lines in contents:
        parts = lines.split(":") # Extract the two data fields.
        item = parts[:1] #Extract the items list
        price = parts[1:] #Extract the price list
        both_lists = [item,price] 
        print(both_lists)
    for things in both_lists:
        print(things)
    file_out = open("test_out.txt", 'w')
    file_out.write(str(things))
    file_out.close()

if __name__ == '__main__':
    main() # call main function


##try:
##    raise NameError('HiThere')
##except NameError:
##    print('An exception flew by!')
##    raise  #try/except portion

##<_io.TextIOWrapper name='ColeBielskisLab4out.txt' mode='w' encoding='UTF-8'>

import datetime
d = datetime.date.today()
print(d)

# Program Output

"""
Test Case 1: (demonstrates try-except)
Test Case 2: (successful test run) 

"""





















